version: "3.8"

services:
  # --- ZooKeeper (Kafka dependency) ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kanban-net

  # --- Kafka Broker ---
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      # ðŸ‘‡ Two listeners:
      # - PLAINTEXT: for other Docker containers (internal network)
      # - PLAINTEXT_HOST: for your Windows host (external)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"   # internal access (for containers)
      - "9093:9093"   # external access (for host)
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - kanban-net

  # --- Confluent Schema Registry ---
  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    container_name: schema-registry
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    ports:
      - "8081:8081"
    networks:
      - kanban-net

  # --- PostgreSQL ---
  postgres:
    image: postgres:16
    container_name: kanban-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kanban
    ports:
      - "5432:5432"
    volumes:
      - kanban_pg_data:/var/lib/postgresql/data
    networks:
      - kanban-net

# --- Shared network ---
networks:
  kanban-net:
    driver: bridge

# --- Persistent volumes ---
volumes:
  kanban_pg_data:
  kafka_data:
